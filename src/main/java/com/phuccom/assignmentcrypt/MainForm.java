/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.phuccom.assignmentcrypt;

import com.phuccom.assignmentcrypt.utils.FileEncryption;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.SecretKey;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.xml.bind.DatatypeConverter;

/**
 *
 * @author bbphuc
 */
public class MainForm extends javax.swing.JFrame {

    ProgressDialog progressDialog;
    public static final String TITLE = "Encrypt file";
    private SecretKey mKey;
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }
    
    private int showRequestPassword(boolean repeatPassword){
        JDialogRequestPassword d = new JDialogRequestPassword(this, true, repeatPassword);
        d.setVisible(true);
        
        if ((mKey = d.getKey()) == null){
            return JOptionPane.CANCEL_OPTION;
        } else {
            return JOptionPane.OK_OPTION;
        }
    }
    
    private void showErrorMessages(String message){
        JOptionPane.showMessageDialog(this, message, TITLE, JOptionPane.ERROR_MESSAGE);
    }
    
    private int showWarningMessage(String message){
        int ret = JOptionPane.showConfirmDialog(this, message, TITLE, JOptionPane.WARNING_MESSAGE);
        return ret;
    }

    private boolean validateInput(){
        String filename_input = txt_InputFilePath.getText();
        String filename_output = txt_OutputFilePath.getText();
        String error = "";
        String warning = "";
        // Check file exist
        if (filename_input.length() > 0 && filename_output.length() > 0){
           File in = new File(filename_input);
           File out  = new File(filename_output);
           boolean b1 = in.exists() && in.isFile();
           boolean b2 = !out.exists();
           if (!b1) {
               error += "Input file must exits";
           }
           if (!b2) {
               warning += "Overwrite output file";
           }
        } else {
            error += "Input file and output file not null.";
        }
        if (error.length() > 0 ){
            showErrorMessages(error);
            return false;
        } else {
            return warning.length() == 0 || showWarningMessage(warning) == JOptionPane.OK_OPTION;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txt_InputFilePath = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        mBtnOpenFile = new javax.swing.JButton();
        mBtnStart = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_OutputFilePath = new javax.swing.JTextField();
        mBtnSaveFile = new javax.swing.JButton();
        btnEncryptOrDecrypt = new javax.swing.JToggleButton();
        lb_fileChecksum = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DES" }));

        jLabel1.setText("Algorithm");

        txt_InputFilePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_InputFilePathActionPerformed(evt);
            }
        });

        jLabel2.setText("File path");

        mBtnOpenFile.setText("Open");
        mBtnOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBtnOpenFileActionPerformed(evt);
            }
        });

        mBtnStart.setText("Start");
        mBtnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBtnStartActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("Secret files");

        jLabel4.setText("Output path");

        mBtnSaveFile.setText("Save");
        mBtnSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBtnSaveFileActionPerformed(evt);
            }
        });

        btnEncryptOrDecrypt.setText("Encrypt");
        btnEncryptOrDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryptOrDecryptActionPerformed(evt);
            }
        });

        lb_fileChecksum.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_fileChecksum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnEncryptOrDecrypt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_OutputFilePath, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                    .addComponent(mBtnStart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_InputFilePath, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(mBtnOpenFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mBtnSaveFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 70, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEncryptOrDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_InputFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mBtnOpenFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_OutputFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mBtnSaveFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lb_fileChecksum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(mBtnStart)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mBtnOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBtnOpenFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int result = fc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION){
            // Selected a file
            File file = fc.getSelectedFile();
            
            try {
                // Show file check sum
                byte[] checksum = FileEncryption.getFileChecksum(file);
                String md5Checksum = DatatypeConverter.printHexBinary(checksum);
                lb_fileChecksum.setText(md5Checksum);
            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            txt_InputFilePath.setText(file.getAbsolutePath());
            if (txt_OutputFilePath.getText().length() <= 0)
                txt_OutputFilePath.setText(file.getAbsolutePath() + ".decypted");
            // Print file information
            System.out.println("Path : " + file.getAbsolutePath());
            System.out.println("File size: " + file.length());
            System.out.println("File last modified: " + new Date(file.lastModified()));
        }
    }//GEN-LAST:event_mBtnOpenFileActionPerformed

    private void txt_InputFilePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_InputFilePathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_InputFilePathActionPerformed

    private void mBtnSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBtnSaveFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int result = fc.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION){
            // Selected a file
            File file = fc.getSelectedFile();
            txt_OutputFilePath.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_mBtnSaveFileActionPerformed

    private void mBtnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBtnStartActionPerformed
        // TODO add your handling code here:
        if (!validateInput()) {
            return;
        }
        

        
        progressDialog = new ProgressDialog();
        final JFrame frame = new JFrame();
        frame.add(progressDialog);
        frame.setSize(400, 200);
        frame.setVisible(true);
        FileEncryption fe = new FileEncryption(new UpdateStatusCallback() {
            @Override
            public void update(float p) {
                //System.out.println(p);
                progressDialog.setProgressStatus((int)(p * 100));
            }
        });
        
        
        
        String i = txt_InputFilePath.getText();
        String o = txt_OutputFilePath.getText();
        File in = new File(i);
        File out = new File(o);
        
            if (btnEncryptOrDecrypt.isSelected()){
                if (showRequestPassword(true) == JOptionPane.CANCEL_OPTION){
                    return;
                }
                
                Thread t = new Thread(() -> {
                    try {
                        fe.setKey(mKey);
                        fe.decrypt(in, out);
                        JOptionPane.showMessageDialog(null, "Decription complete", "Title", JOptionPane.INFORMATION_MESSAGE);
                        frame.setVisible(false);
                    } catch (IOException | InvalidKeyException ex) {
                        JOptionPane.showMessageDialog(MainForm.this, "Wrong password.", TITLE, JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (FileEncryption.InvalidChecksum  ex) {
                        JOptionPane.showMessageDialog(MainForm.this, "Wrong password", TITLE, JOptionPane.ERROR_MESSAGE);
                    } finally {
                        frame.setVisible(false);
                        frame.dispose();
                    }
                });
                t.start();
            } else {
                if (showRequestPassword(false) == JOptionPane.CANCEL_OPTION){
                    return;
                }
                Thread t = new Thread(() -> {
                    try {
                        fe.setKey(mKey);
                        fe.encrypt(in, out);
                        JOptionPane.showMessageDialog(null, "Encryption complete", "Title", JOptionPane.INFORMATION_MESSAGE);
                        frame.setVisible(false);
                    } catch (IOException | InvalidKeyException ex) {
                        Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (FileEncryption.InvalidChecksum e){
                        JOptionPane.showMessageDialog(MainForm.this, "File has invalid check sum.", TITLE, JOptionPane.ERROR_MESSAGE);
                    } finally {
                        frame.setVisible(false);
                        frame.dispose();
                    }
                });
                t.start();
            }
        
    }//GEN-LAST:event_mBtnStartActionPerformed

    private void btnEncryptOrDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryptOrDecryptActionPerformed
        // TODO add your handling code here:
        if (!btnEncryptOrDecrypt.isSelected()){
            btnEncryptOrDecrypt.setText("Encrypt");
        } else {
            btnEncryptOrDecrypt.setText("Decrypt");
        }
    }//GEN-LAST:event_btnEncryptOrDecryptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnEncryptOrDecrypt;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JLabel lb_fileChecksum;
    private javax.swing.JButton mBtnOpenFile;
    private javax.swing.JButton mBtnSaveFile;
    private javax.swing.JButton mBtnStart;
    private javax.swing.JTextField txt_InputFilePath;
    private javax.swing.JTextField txt_OutputFilePath;
    // End of variables declaration//GEN-END:variables
}
